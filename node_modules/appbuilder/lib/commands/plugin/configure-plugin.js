"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments)).next());
    });
};
const pluginConfigureCommandParameterLib = require("./plugin-configure-command-parameter");
class ConfigurePluginCommand {
    constructor($pluginsService, $injector) {
        this.$pluginsService = $pluginsService;
        this.$injector = $injector;
        this.allowedParameters = [this.$injector.resolve(pluginConfigureCommandParameterLib.PluginConfigureCommandParameter)];
    }
    execute(args) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.$pluginsService.configurePlugin(args[0]);
        });
    }
}
exports.ConfigurePluginCommand = ConfigurePluginCommand;
$injector.registerCommand("plugin|configure", ConfigurePluginCommand);
