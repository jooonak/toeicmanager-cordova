"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments)).next());
    });
};
const PluginsDataLib = require("../../plugins-data");
class MarketplacePluginsService {
    constructor($server, $project, $projectConstants) {
        this.$server = $server;
        this.$project = $project;
        this.$projectConstants = $projectConstants;
    }
    getAvailablePlugins() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.$server.cordova.getMarketplacePluginsData(this.$project.projectData.Framework);
        });
    }
    createPluginData(plugin) {
        return __awaiter(this, void 0, void 0, function* () {
            return _.map(plugin.Versions, (pluginVersionData) => new PluginsDataLib.MarketplacePluginData(plugin, pluginVersionData, this.$project, this.$projectConstants));
        });
    }
}
exports.MarketplacePluginsService = MarketplacePluginsService;
$injector.register("marketplacePluginsService", MarketplacePluginsService);
