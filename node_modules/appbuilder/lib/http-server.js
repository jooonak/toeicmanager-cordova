"use strict";
const http = require("http");
const url = require("url");
const path = require("path");
class HttpServer {
    constructor($logger, $fs) {
        this.$logger = $logger;
        this.$fs = $fs;
    }
    createServer(configuration) {
        if (!configuration.catchAll) {
            configuration.catchAll = (request, response) => {
                response.statusCode = 404;
                response.end();
            };
        }
        return http.createServer((request, response) => {
            let uriPath = url.parse(request.url).pathname;
            this.$logger.debug("Serving '%s'", uriPath);
            response.setHeader("Connection", "close");
            if (!configuration.routes[uriPath]) {
                configuration.catchAll(request, response);
            }
            else {
                configuration.routes[uriPath](request, response);
            }
        });
    }
    serveFile(fileName) {
        return (request, response) => {
            let mimeTypes = {
                ".html": "text/html",
                ".jpeg": "image/jpeg",
                ".jpg": "image/jpeg",
                ".png": "image/png",
                ".js": "text/javascript",
                ".css": "text/css"
            };
            this.$logger.debug("Returning '%s'", fileName);
            let mimeType = mimeTypes[path.extname(fileName)];
            response.statusCode = 200;
            response.setHeader("Content-Type", mimeType);
            this.$fs.createReadStream(fileName).pipe(response);
        };
    }
    redirect(response, targetUrl) {
        response.statusCode = 302;
        response.setHeader("Location", targetUrl);
        response.end();
    }
}
exports.HttpServer = HttpServer;
$injector.register("httpServer", HttpServer);
